// Generated by CoffeeScript 1.9.3
var Iterator, Series, SortMap, exports, generatorRulers, groupBy, grouped, through;

through = require('through');

SortMap = require('sortset').SortMap;

Iterator = require('sortset').Iterator;

grouped = (function() {
  function grouped() {
    this.series = [];
  }

  grouped.prototype.iterator = function() {
    return new Iterator(this.series);
  };

  return grouped;

})();

Series = (function() {
  function Series() {
    this.data = new SortMap;
  }

  return Series;

})();

generatorRulers = function(fields) {
  var field, i, index, len, ruler, rulers;
  rulers = {
    items: new SortMap,
    exec: function(doc) {},
    add: function(ruler) {
      return this.items.add(ruler.name, ruler);
    }
  };
  if (!fields instanceof Array) {
    fields = fields.split(',');
  }
  for (index = i = 0, len = fields.length; i < len; index = ++i) {
    field = fields[index];
    ruler = {
      name: field,
      exec: function(doc) {
        return doc[this.name];
      }
    };
    if ('function' === typeof field) {
      ruler = {
        name: "Series " + index,
        exec: field
      };
    }
    rulers.add(ruler);
  }
  return rulers;
};

exports = module.exports = groupBy = function(fields) {
  var end, rulers, s, write;
  rulers = generatorRulers(fields);
  write = function(doc) {
    return ruler.exec(doc);
  };
  end = function() {};
  s = through(write, end);
  return s;
};

//# sourceMappingURL=groupby.js.map
